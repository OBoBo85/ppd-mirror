name: Mirror PPD CSV (latest)
on:
  schedule:
    - cron: "5 6 * * *"   # her gün 06:05 UTC
  workflow_dispatch:      # Elle tetiklemek için

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Pick latest available month (try up to 6 months back)
        id: pick
        run: |
          node -e '
            function ok(u){
              try{
                const cp=require("child_process");
                const code=cp.execSync(`curl -I -s -L -o /dev/null -w "%{http_code}" "${u}"`).toString().trim();
                return code==="200";
              }catch{ return false; }
            }
            const now=new Date();
            let y=now.getUTCFullYear();
            let m=now.getUTCMonth(); // 0=Jan -> last completed month
            if(m===0){ m=12; y--; }
            for(let i=0;i<6;i++){
              const Y=y, M=String(m).padStart(2,"0");
              const primary=`https://prod.publicdata.landregistry.gov.uk/ppd/monthly/pp-${Y}-${M}.csv`;
              const fallback=`https://landregistry.data.gov.uk/app/ppd/ppd_data_monthly_report/download?month=${Y}-${M}&format=csv`;
              if(ok(primary)){ console.log("URL="+primary); console.log("MONTH="+`${Y}-${M}`); process.exit(0); }
              if(ok(fallback)){ console.log("URL="+fallback); console.log("MONTH="+`${Y}-${M}`); process.exit(0); }
              m--; if(m===0){ m=12; y--; }
            }
            process.exit(1);
          ' > pick.txt || true

      - name: Parse chosen URL
        id: url
        run: |
          URL=$(grep '^URL=' pick.txt | sed 's/URL=//')
          if [ -z "$URL" ]; then echo "No URL found"; exit 1; fi
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Chosen: $URL"

      - name: Download CSV
        run: |
          curl -L "${{ steps.url.outputs.url }}" -o latest_raw.csv

      - name: Ensure header row (fallback)
        run: |
          # Çoğu PPD CSV'de header var; yoksa ekliyoruz:
          if head -n 1 latest_raw.csv | grep -qi 'price'; then
            cp latest_raw.csv latest.csv
          else
            echo 'Price,Date of Transfer,Postcode,PAON,SAON,Street,Locality,Town/City,District,County' > latest.csv
            cat latest_raw.csv >> latest.csv
          fi

      - name: Commit to repo
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add latest.csv
          git commit -m "update latest.csv" || echo "no changes"
          git push
